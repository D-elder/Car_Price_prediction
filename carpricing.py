# -*- coding: utf-8 -*-
"""CaRpricing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zPNg9RbKVEgCGtW71n6V0Y5wyI_evuOd
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import scipy



from sklearn.ensemble import ExtraTreesRegressor

from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.metrics import mean_squared_error

data = pd.read_csv("Car details.csv")
data

data1 = data.dropna(axis=0)

data1.isnull().sum()

X = data1.drop("selling_price", axis=1)
y = data1['selling_price']

X.head()

X.drop('name', axis=1, inplace=True)

from sklearn.pipeline import Pipeline
from sklearn.preprocessing import MinMaxScaler, StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.compose import ColumnTransformer

from sklearn.preprocessing import OneHotEncoder

X_encoded = pd.get_dummies(X, columns=['seller_type',
                                       'fuel',
                                       'transmission',
                                       'owner'])

X_encoded.dtypes

X_encoded['max_power'] = X_encoded['max_power'].astype(float)

X_encoded.dtypes

X_encoded.values

xtrain, xtest, ytrain, ytest = train_test_split(X_encoded, y, test_size=0.30)

extra_tree_model = ExtraTreesRegressor(n_estimators = 100,
          criterion ='mse', max_features = "auto")

print(extra_tree_model)

extra_tree_model.fit(xtrain, ytrain)

ypred = extra_tree_model.predict(xtest)

from sklearn.metrics import accuracy_score

extra_tree_accuracy = round(extra_tree_model.score(xtrain, ytrain)*100,2)
print(round(extra_tree_accuracy, 2), '%')

import pickle 

saved_model = pickle.dump(extra_tree_model, open('CarSelling.pickle','wb'))